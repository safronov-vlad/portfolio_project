# Generated by Django 4.0.4 on 2022-04-17 10:58

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='Имя пользователя')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Электронная почта')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
                ('telegram', models.CharField(blank=True, max_length=100, verbose_name='Телеграм')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Фамилия')),
                ('balance', models.FloatField(verbose_name='Баланс')),
                ('tariff', models.IntegerField(default=32, verbose_name='Стоимость тарифа')),
                ('goip_mode', models.BooleanField(default=False, verbose_name='Работа через goip?')),
                ('freeze', models.BooleanField(default=False, verbose_name='Замарожено?')),
                ('our_server', models.BooleanField(default=True, verbose_name='Наш Сервер?')),
                ('multi', models.BooleanField(default=False, verbose_name='Включить мульти аккаунт?')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активен?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Статус персонала')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Статус суперпользователя')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Клиенты',
                'verbose_name_plural': 'Клиент',
            },
            managers=[
                ('objects', core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Оператор')),
                ('favicon', models.CharField(default='https://favicon.yandex.net/favicon/', max_length=200, verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Оператор',
                'verbose_name_plural': 'Операторы',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название сервиса')),
                ('url', models.CharField(max_length=200, verbose_name='Url сервиса')),
                ('comment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
            },
        ),
        migrations.CreateModel(
            name='SimbankScheduler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Имя Scheduler')),
                ('server', models.CharField(max_length=80, verbose_name='Путь, по которому доступен Scheduler')),
                ('sc_login', models.CharField(default='admin', max_length=80, verbose_name='Логин Scheduler')),
                ('sc_pass', models.CharField(default='admin', max_length=80, verbose_name='Пароль Scheduler')),
                ('sms_login', models.CharField(default='root', max_length=80, verbose_name='Логин SmsServer')),
                ('sms_pass', models.CharField(default='root', max_length=80, verbose_name='Пароль SmsServer')),
                ('status', models.BooleanField(default=False, verbose_name='Работает?')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('client', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Симбанк Scheduler',
                'verbose_name_plural': 'Симбанки Scheduler',
            },
        ),
        migrations.CreateModel(
            name='Simbank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Имя симбанка')),
                ('smb_id', models.IntegerField(verbose_name='ID симбанка')),
                ('password', models.CharField(max_length=200, verbose_name='Пароль симбанка')),
                ('smb_type', models.IntegerField(choices=[(1, '128'), (2, '32')], default=1, verbose_name='Тип симбанка')),
                ('imeimode', models.IntegerField(choices=[(1, 'GOIP Default'), (2, 'Random'), (3, 'Set with Slot'), (4, 'Random with IMSI'), (5, 'Set from database with IMSI')], default=1, verbose_name='Прицнип формирования IMEI сим карты')),
                ('count_active', models.IntegerField(default=0, verbose_name='Кол-во активных сим')),
                ('status', models.BooleanField(default=False, verbose_name='Работает?')),
                ('client', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('scheduler', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.simbankscheduler')),
            ],
            options={
                'verbose_name': 'Симбанк',
                'verbose_name_plural': 'Симбанки',
                'unique_together': {('client', 'smb_id')},
            },
        ),
        migrations.CreateModel(
            name='Sim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Номер симкарты')),
                ('balance', models.FloatField(default=0, verbose_name='Баланс')),
                ('balance_dt', models.DateTimeField(auto_now=True, verbose_name='Дата обновления баланса')),
                ('add_dt', models.DateField(auto_now_add=True, verbose_name='Дата добавления в панель')),
                ('pay_operation', models.BooleanField(default=False, verbose_name='Платные действия')),
                ('last_pay_operation', models.DateTimeField(null=True, verbose_name='Дата последнего платного действия')),
                ('status', models.BooleanField(default=True, verbose_name='Статус')),
                ('smb_id', models.IntegerField(blank=True, null=True, verbose_name='Номер слота симбанка, в который вставлена Сим')),
                ('goip_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Goip Slot')),
                ('imsi', models.CharField(blank=True, max_length=200, null=True, verbose_name='IMSI')),
                ('imei', models.CharField(blank=True, max_length=200, null=True, verbose_name='IMEI')),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.simbank', verbose_name='В каком банке вставлена')),
                ('client', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.operator', verbose_name='Оператор')),
                ('services', models.ManyToManyField(blank=True, to='core.service', verbose_name='Заюзаные сервисы')),
            ],
            options={
                'verbose_name': 'Сим-карта',
                'verbose_name_plural': 'Сим-Карты',
            },
        ),
        migrations.CreateModel(
            name='Goip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Имя шлюза')),
                ('goip_id', models.IntegerField(verbose_name='Id шлюза')),
                ('password', models.CharField(max_length=200, verbose_name='Пароль шлюза для сервера')),
                ('goip_type', models.IntegerField(choices=[(1, '32'), (2, '16'), (3, '8'), (4, '4'), (5, '1')], default=3)),
                ('status', models.BooleanField(default=False, verbose_name='Работает?')),
                ('client', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('scheduler', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.simbankscheduler', verbose_name='Scheduler')),
            ],
            options={
                'verbose_name': 'GOIP Шлюз',
                'verbose_name_plural': 'GOIP Шлюзы',
                'unique_together': {('client', 'goip_id')},
            },
        ),
    ]
